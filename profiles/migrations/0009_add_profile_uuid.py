# Generated by Django 2.2.4 on 2019-11-05 09:27

import uuid

from django.db import migrations, models


def populate_uuids(apps, schema_editor):
    Profile = apps.get_model("profiles", "Profile")
    for p in Profile.objects.all():
        p.uuid = uuid.uuid4()
        p.save(update_fields=["uuid"])


def match_id_to_uuid(apps, schema_editor):
    Profile = apps.get_model("profiles", "Profile")
    LegalRelationship = apps.get_model("profiles", "LegalRelationship")

    for lr in LegalRelationship.objects.all():
        # reassign representee
        p = Profile.objects.filter(id=lr.representee).first()

        if p and p.uuid:
            lr.representee = p.uuid
            lr.save(update_fields=["representee"])
        else:
            # this should not be the case, but let's ensure
            # that this scenario is handled somewhat gracefully:
            # delete the row, because keeping old values
            # will break the followng migrations
            # (both for migrating backwards and forward)
            lr.delete()
            continue

        # reassign representative
        p = Profile.objects.filter(id=lr.representative).first()

        if p and p.uuid:
            lr.representative = p.uuid
            lr.save(update_fields=["representative"])
        else:
            lr.delete()


def match_uuid_to_id(apps, schema_editor):
    Profile = apps.get_model("profiles", "Profile")
    LegalRelationship = apps.get_model("profiles", "LegalRelationship")

    for lr in LegalRelationship.objects.all():
        # reassign representee
        p = Profile.objects.filter(uuid=lr.representee).first()

        if p and p.id:
            lr.representee = p.id
            lr.save(update_fields=["representee"])
        else:
            # see above
            lr.delete()
            continue

        # reassign representative
        p = Profile.objects.filter(uuid=lr.representative).first()

        if p and p.id:
            lr.representative = p.id
            lr.save(update_fields=["representative"])
        else:
            # see above
            lr.delete()


class Migration(migrations.Migration):

    dependencies = [("profiles", "0008_add_first_name_and_last_name_to_profile")]

    operations = [
        migrations.AddField(
            model_name="profile",
            name="uuid",
            field=models.UUIDField(null=True, blank=True),
        ),
        migrations.RunPython(populate_uuids, migrations.RunPython.noop),
        migrations.RemoveField(model_name="profile", name="concepts_of_interest"),
        migrations.RemoveField(model_name="profile", name="divisions_of_interest"),
        migrations.AlterField(
            model_name="legalrelationship",
            name="representative",
            field=models.CharField(max_length=36),
        ),
        migrations.AlterField(
            model_name="legalrelationship",
            name="representee",
            field=models.CharField(max_length=36),
        ),
        migrations.RunPython(match_id_to_uuid, match_uuid_to_id),
    ]
